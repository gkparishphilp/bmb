%h2
	Author Admin Area
%br
%br
%hr
%b Manage book, skus, and assets
%br
%br
= link_to 'Create a book', new_book_path( @current_user.author )
%br
%br
= link_to 'Create an asset', '#create_asset_form', :rel => 'facebox'
%br
%br
= link_to 'Create a sku', '#create_sku_form', :rel => 'facebox'
%br
%br
= link_to 'Add asset to sku', '#add_asset_to_sku_form', :rel => 'facebox'
%br
%br
%hr
= link_to 'Upload a List for Giveaway', '#upload_giveaway_list_form', :rel => 'facebox'
%br
%br	
= link_to 'Upload Email Subscription List', '#upload_email_list_form', :rel => 'facebox'
%br
%br

= link_to 'Create a new email message', new_author_email_campaign_email_message_path(@author, @campaign)

%br
%br
%hr
%b Existing Email Messages
%br
%table
	%tr
		%td 
			%b Created On
		%td 
			%b Subject
		%td 
			%b Status
		%td
			%b Action
	
	- for message in @author.email_campaigns.default.first.email_messages.reverse
		%tr{:class => cycle(:odd, :even)}
			%td 
				= message.created_at.to_s(:long)
			%td 
				= message.subject
			%td 
				= message.status
			%td
				- if message.status.match(/created/i)
					=link_to '[Send to me]', root_path
					=link_to '[Send]', root_path
					=link_to '[Edit]', edit_author_email_campaign_email_message_path( @author, @campaign, message )
					=link_to '[Delete]', author_email_campaign_email_message_path( @author, @campaign, message ), :confirm => 'Are you sure you want to delete this message?', :method => :delete
				- else 
					=link_to '[View]', author_email_campaign_email_message_path( @author, @campaign, message )


%br
%hr
%b Subscriptions
%br
%br


= link_to 'Purchase Author Premium Subscription', new_order_path(:ordered_id => 1, :ordered_type=> 'Subscription')
%br
%br
Existing Subscriptions
%table
	%tr
		%td 
			%b Subscription Title
		%td
			%b Actions

	- for sub in @author.user.subscribings
		%tr{:class => cycle(:odd, :even)}
			%td
				=sub.subscription.title 
				,
				=sub.id
				,
				=sub.profile_id
			%td
				- if sub.status == 'ActiveProfile'
					=link_to 'Cancel', cancel_subscribing_path( sub ) 
	
%br
%hr
%b Purchase Testing
%br
%br
=link_to 'Purchase Sku', new_order_path(:ordered_id => 1, :ordered_type=> 'Sku')
%br
%br
=link_to 'Purchase Asset', new_order_path(:ordered_id => 2, :ordered_type=> 'Asset')
%br
	

#create_book_form( style = 'display:none;')
	%h2 Create a Book 

	-form_for Book.new, :html => {:multipart => :true} do |f|
		Title:
		= f.text_field	:title
		%br
		Subtitle: 
		= f.text_field :subtitle
		%br
		Description: 
		= f.text_field :description
		%br
		= f.hidden_field :author_id, :value => @author.id
		%br
		= f.submit "Create"
		%br

#create_asset_form( style = 'display:none;')
	%h2 Create an Asset 

	-form_for Asset.new, :html => {:multipart => :true} do |f|
		For Book:
		= f.collection_select :book_id, @author.books, :id, :title
		%br
		Title:
		= f.text_field	:title
		%br
		Format: 
		= f.select :format, %w{pdf epub mobi awz lit}
		%br
		Type of Asset
		= f.select :asset_type, %w{book chapter preview}
		%br
		Price: 
		= f.text_field :price
		%br
		= f.submit "Create"

#create_sku_form( style = 'display:none;')
	%h2 Create a Sku 

	-form_for Sku.new, :html => {:multipart => :true} do |f|
		=f.hidden_field :owner_id, :value => @author.id
		=f.hidden_field :owner_type, :value => @author.class.name
		%br
		Title:
		= f.text_field	:title
		%br
		Description:
		= f.text_field	:description
		%br
		Price: 
		= f.text_field :price
		%br
		= f.submit "Create"
		
#add_asset_to_sku_form( style = 'display:none;')
	%h2 Add Asset to Sku 

	-form_for SkuAsset.new do |f|
		Select Sku:
		= f.collection_select :sku_id, @author.skus, :id, :title
		%br
		Select Asset:
		= f.collection_select :asset_id, @all_assets, :id, :title
		%br
		= f.submit "Add"

#upload_email_list_form( style = 'display:none;')
	%h2 Upload Email List 

	-form_for [ @author, UploadEmailList.new ], :html => {:multipart => :true} do |f|
		= f.file_field :file_name
		= f.hidden_field :list_type, :value => "newsletter"
		= f.submit "Upload"
		%br
		Comma separated value (.csv) file with name and email columns only.  

#upload_giveaway_list_form( style = 'display:none;')
	%h2 Upload Giveaway Email List 

	-# TODO This form only lists books as the item to be given away.  Should extend this in the future perhaps?
	-form_for UploadEmailList.new, :html => {:multipart => :true} do |f|
		= f.collection_select :book_id, @current_user.author.books, :id, :title
		= f.file_field :file_name
		= f.submit "Upload"
		= f.hidden_field :list_type, :value => "giveaway"
		%br
		Comma separated value (.csv) file with email column only.
